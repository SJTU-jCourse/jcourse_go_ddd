version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - CONFIG_PATH=/root/config/config.yaml
    volumes:
      - ./config:/root/config
    depends_on:
      - mysql
      - redis
    networks:
      - jcourse-network
    restart: unless-stopped

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./worker"]
    environment:
      - CONFIG_PATH=/root/config/config.yaml
    volumes:
      - ./config:/root/config
    depends_on:
      - mysql
      - redis
    networks:
      - jcourse-network
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=jcourse
      - MYSQL_USER=jcourse
      - MYSQL_PASSWORD=jcoursepassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jcourse-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jcourse-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - jcourse-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  jcourse-network:
    driver: bridge